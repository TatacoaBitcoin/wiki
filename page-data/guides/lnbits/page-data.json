{"componentChunkName":"component---src-templates-docs-js","path":"/guides/lnbits","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"09e60606-9ea9-59f7-8f36-e520130eeb78","title":"LNBits","slug":"/guides/lnbits"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"LNBits\",\n  \"metaTitle\": \"GuÃ­as - LNBits\",\n  \"metaDescription\": \"How-to guides\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Debian 11.5\"), mdx(\"p\", null, \"Actualizar servidor\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt update\\n# apt upgrade\\n\")), mdx(\"h2\", null, \"Python\"), mdx(\"p\", null, \"Primero se instala pyenv para poder instalar la versi\\xF3n de Python que se necesite.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt install \\\\\\n    make \\\\\\n    build-essential \\\\\\n    libssl-dev \\\\\\n    zlib1g-dev \\\\\\n    libbz2-dev \\\\\\n    libreadline-dev \\\\\\n    libsqlite3-dev \\\\\\n    wget \\\\\\n    curl \\\\\\n    llvm \\\\\\n    libncurses5-dev \\\\\\n    libncursesw5-dev \\\\\\n    xz-utils \\\\\\n    tk-dev \\\\\\n    libffi-dev \\\\\\n    liblzma-dev \\\\\\n    git\\n# curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash\\n\")), mdx(\"p\", null, \"Agregarlo al path\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# vi .profile\\n\\nexport PYENV_ROOT=\\\"$HOME/.pyenv\\\"\\ncommand -v pyenv >/dev/null || export PATH=\\\"$PYENV_ROOT/bin:$PATH\\\"\\neval \\\"$(pyenv init -)\\\"\\n\\n# source .profile\\n# pyenv -v\\n\")), mdx(\"p\", null, \"Instalar Python3.9 usando pyenv\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# pyenv install 3.9\\n# python3 --version\\n\")), mdx(\"p\", null, \"Instalar poetry, a dependency and package manager for Python.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# vi .profile\\n\\nexport PATH=\\\"/root/.local/bin:$PATH\\\"\\n\\n# source .profile\\n# poetry --version\\n\")), mdx(\"h2\", null, \"Postgres\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt install postgresql\\n# service postgresql status\\n# su postgres\\n$ psql\\n=# ALTER USER postgres PASSWORD passwordd;\\n=# \\\\q\\n$ createdb lnbits\\n$ exit\\n\")), mdx(\"h2\", null, \"LNbits\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# git clone https://github.com/lnbits/lnbits-legend.git\\n# cd lnbits-legend/\\n# poetry env use python3\\n# poetry env info\\n# poetry install --only main\\n# mkdir data\\n# cp .env.example .env\\n# vi .env\\n\\nLNBITS_DATABASE_URL=\\\"postgres://postgres:passwordd@localhost/lnbits\\\"\\nLNBITS_SITE_TITLE=\\\"Staging LNbits\\\"\\nLNBITS_BACKEND_WALLET_CLASS=LndRestWallet\\nLND_REST_ENDPOINT=\\\"https://btcpay.tatacoabitcoin.com/lnd-rest/btc/\\\"\\nLND_REST_CERT=\\\"\\\"\\nLND_REST_MACAROON=\\\"hexmacaroon\\\"\\n\\n# /root/.cache/pypoetry/virtualenvs/lnbits-tijLzCFv-py3.9/bin/uvicorn lnbits.__main__:app --host 127.0.0.1 --port 5000\\n\")), mdx(\"h3\", null, \"Service\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# vi /etc/systemd/system/lnbits.service\\n\\n[Unit]\\nDescription=Uvicorn instance to serve Lnbits\\nAfter=network.target\\n\\n[Service]\\nUser=root\\nGroup=root\\nWorkingDirectory=/root/lnbits-legend\\nEnvironment=\\\"PATH=/root/.cache/pypoetry/virtualenvs/lnbits-tijLzCFv-py3.9/bin/\\\"\\nExecStart=/root/.cache/pypoetry/virtualenvs/lnbits-tijLzCFv-py3.9//bin/uvicorn lnbits.__main__:app --host 127.0.0.1 --port 5000\\n\\n[Install]\\nWantedBy=multi-user.target\\n\\n# service lnbits status\\n\")), mdx(\"h2\", null, \"Nginx\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt install nginx\\n# service nginx status\\n\\n# vi /etc/nginx/sites-available/staging-lnbits.tatacoabitcoin.com.conf\\n\\nserver {\\n    client_max_body_size 4G;\\n    server_name lnbits.tatacoabitcoin.com;\\n\\n    location / {\\n        proxy_set_header Host $http_host;\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n        proxy_set_header X-Forwarded-Proto $scheme;\\n        proxy_set_header Upgrade $http_upgrade;\\n        proxy_set_header Connection $connection_upgrade;\\n        proxy_redirect off;\\n        proxy_buffering off;\\n        proxy_pass http://127.0.0.1:8001;\\n    }\\n\\n    location /static {\\n        # path for static files\\n        root /var/www/html/lnbits.tatacoabitcoin.com/lnbits/;\\n    }\\n\\n    listen 443 ssl; # managed by Certbot\\n    ssl_certificate /etc/letsencrypt/live/lnbits.tatacoabitcoin.com/fullchain.pem; # managed by Certbot\\n    ssl_certificate_key /etc/letsencrypt/live/lnbits.tatacoabitcoin.com/privkey.pem; # managed by Certbot\\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\\n}\\n\\nmap $http_upgrade $connection_upgrade {\\n    default upgrade;\\n    '' close;\\n}\\n\\nupstream uvicorn {\\n    server unix:/tmp/uvicorn.sock;\\n}\\nserver {\\n    if ($host = lnbits.tatacoabitcoin.com) {\\n    return 301 https://$host$request_uri;\\n    } # managed by Certbot\\n\\n\\n    listen 80;\\n\\n    server_name lnbits.tatacoabitcoin.com;\\n    return 404; # managed by Certbot\\n}\\n\")), mdx(\"h1\", null, \"Ubuntu 20.04\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt -y update\\n\")), mdx(\"h2\", null, \"postgres\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt -y install postgresql\\n# su postgres\\n$ psql\\n=# ALTER USER postgres PASSWORD 'passsss_ss';\\n=# \\\\q\\n$ createdb lnbits\\n$ exit\\n\")), mdx(\"h2\", null, \"pyenv\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt update -y\\n# apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git\\n# git clone https://github.com/pyenv/pyenv.git .pyenv\\n# echo 'export PYENV_ROOT=\\\"$HOME/.pyenv\\\"' >> .bashrc\\n# echo 'export PATH=\\\"$PYENV_ROOT/bin:$PATH\\\"' >> .bashrc\\n# echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\\\n eval \\\"$(pyenv init -)\\\"\\\\nfi' >> .bashrc\\n# exec \\\"$SHELL\\\"\\n# pyenv install 3.7.12 # pyenv install 3.9.10 # latest\\n\")), mdx(\"h2\", null, \"pipenv\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# add-apt-repository universe\\n# apt -y update\\n# apt -y install software-properties-common python3-pip\\n# python3 -m pip install --user pipenv\\n# echo export PATH=\\\"/root/.local/bin:$PATH\\\" >> .bashrc\\n# source .bashrc\\n\")), mdx(\"h2\", null, \"lnbits\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# cd /var/www/html\\n# git clone https://github.com/lnbits/lnbits-legend.git lnbits.tatacoabitcoin.com\\n# cd lnbits.tatacoabitcoin.com\\n# git reset --hard b122debd8c3912be3709ff0cc2d42b74896cfe1b\\n# pipenv --python /root/.pyenv/versions/3.7.12/bin/python3 shell\\n# pipenv install\\n# cp .env.example .env\\n\\nLNBITS_BACKEND_WALLET_CLASS=LndRestWallet\\nLND_REST_ENDPOINT=\\\"https://btcpay.tatacoabitcoin.com/lnd-rest/btc/\\\"\\nLND_REST_CERT=\\\"\\\"\\nLND_REST_MACAROON=\\\"asdas\\\"\\nLNBITS_DATABASE_URL=\\\"postgres://postgres:myPassword@localhost/lnbits\\\"\\n\\n# echo LNBITS_DATABASE_URL=\\\"postgres://postgres:myPassword@localhost/lnbits\\\" >> .env\\n\\n# cd ..\\n# chown -R www-data.www-data lnbits.tatacoabitcoin.com\\n# cd\\n# chown -R www-data.www-data .local/share/virtualenvs/lnbits.tatacoabitcoin.com-7Sj1_cMO\\n\\n# vi /etc/systemd/system/lnbits.service\\n\\n[Unit]\\nDescription=Uvicorn instance to serve Lnbits\\nAfter=network.target\\n\\n[Service]\\nUser=root\\nGroup=root\\nWorkingDirectory=/var/www/html/lnbits.tatacoabitcoin.com\\nEnvironment=\\\"PATH=/root/.local/share/virtualenvs/lnbits.tatacoabitcoin.com-7Sj1_cMO/bin/\\\"\\nExecStart=/root/.cache/pypoetry/virtualenvs/lnbits-tijLzCFv-py3.9/bin/uvicorn lnbits.__main__:app --host 127.0.0.1 --port 5000\\n\\n[Install]\\nWantedBy=multi-user.target\\n\\n# pipenv run python -m uvicorn lnbits.__main__:app --host 127.0.0.1 --port 8001\\n\")), mdx(\"h2\", null, \"Nginx\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# vi /etc/nginx/sites-available/lnbits.tatacoabitcoin.com.conf\\n\\nserver {\\n    client_max_body_size 4G;\\n    server_name lnbits.tatacoabitcoin.com;\\n\\n    location / {\\n        proxy_set_header Host $http_host;\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n        proxy_set_header X-Forwarded-Proto $scheme;\\n        proxy_set_header Upgrade $http_upgrade;\\n        proxy_set_header Connection $connection_upgrade;\\n        proxy_redirect off;\\n        proxy_buffering off;\\n        proxy_pass http://127.0.0.1:8001;\\n    }\\n\\n    location /static {\\n        # path for static files\\n        root /var/www/html/lnbits.tatacoabitcoin.com/lnbits/;\\n    }\\n\\n    listen 443 ssl; # managed by Certbot\\n    ssl_certificate /etc/letsencrypt/live/lnbits.tatacoabitcoin.com/fullchain.pem; # managed by Certbot\\n    ssl_certificate_key /etc/letsencrypt/live/lnbits.tatacoabitcoin.com/privkey.pem; # managed by Certbot\\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\\n}\\n\\nmap $http_upgrade $connection_upgrade {\\n    default upgrade;\\n    '' close;\\n}\\n\\nupstream uvicorn {\\n    server unix:/tmp/uvicorn.sock;\\n}\\nserver {\\n    if ($host = lnbits.tatacoabitcoin.com) {\\n    return 301 https://$host$request_uri;\\n    } # managed by Certbot\\n\\n\\n    listen 80;\\n\\n    server_name lnbits.tatacoabitcoin.com;\\n    return 404; # managed by Certbot\\n}\\n\\n\\n# ln -s /etc/nginx/sites-available/lnbits.tatacoabitcoin.com.conf /etc/nginx/sites-enabled\\n# nginx -t\\n# systemctl restart nginx\\n# certbot\\n# systemctl restart nginx\\n\")), mdx(\"h2\", null, \"Update\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd /var/www/html/lnbits-main.tatacoabitcoin.com\\ngit pull\\n-- check possible changes not included in upstream repo\\nsystemctl restart lnbitsmain\\n\")), mdx(\"p\", null, \"6b5aaa442d01fd3e64f8e20c924af1959a39ad3c\\nDec 22\\n404 Not Found\"), mdx(\"p\", null, \"c87abef20fe7aeba8a29f4180eae94c92ff1cc14\\nDec 21\\n404 Not Found\"), mdx(\"p\", null, \"6b1c1af148541fa1655e413a0f543fe3e7cbcf0c\\nDec 19\\nNameError: name 'hmac' is not defined\"), mdx(\"p\", null, \"31c131e2ab1787a2bd39ad2ba3bcfee99d843029\\nDec 19\\nNameError: name 'hmac' is not defined\"), mdx(\"p\", null, \"a86dcb95868999348b51a49a0375cdcadfab5cff\\nDec 19\\nNameError: name 'hmac' is not defined\"), mdx(\"hr\", null), mdx(\"p\", null, \"1609280f53dbe369b22df8688a0b4296bacfd349\\nNov 28\\nOK\"), mdx(\"hr\", null), mdx(\"p\", null, \"e3c648590362b3fa527529e4d01b86a4a4707e91\\nNov 28\\nNo txs\"), mdx(\"p\", null, \"3fd66f38dad185c9b895beab66118cc7e2b1a2f4\\nNov 27\\nOK - rename endpoint to avoid collision - not showing pos list\"), mdx(\"p\", null, \"bc0b64a3fbfc35652ebb036250be1ea5c936165d\\nNov 23\\nOk - Fixed lnurlpos links not showing - not working transactions endpoint\"), mdx(\"p\", null, \"4e6c30a909dee3d2c54f65fec6ff568f9b3265d6\\nNov 17\\nOK - not showing pos list\"), mdx(\"p\", null, \"Withdrawal\\nURL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://lnbits.tatacoabitcoin.com/bleskomat/u\"\n  }, \"https://lnbits.tatacoabitcoin.com/bleskomat/u\"), \"\\nID: 73be7ff09ffd8150\\nKey: f75465aca6e45a0a346531cea75d1bb7498249467a13fa06f6143144bc252b13\"), mdx(\"p\", null, \"Payment\\nURL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://lnbits.tatacoabitcoin.com/lnurlpos/api/v1/lnurl\"\n  }, \"https://lnbits.tatacoabitcoin.com/lnurlpos/api/v1/lnurl\"), \"\\nID: LdrfYv4Cj6dV69Yyp93CCL\\nKey: 3kNK2KeysoGk3ayG6EFzNu\"), mdx(\"h1\", null, \"Installation\"), mdx(\"p\", null, \"commit b122debd8c3912be3709ff0cc2d42b74896cfe1b\"), mdx(\"h2\", null, \"postgres\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt -y install postgresql\\n# su postgres\\n$ psql\\n=# ALTER USER postgres PASSWORD 'myPassword';\\n=# \\\\q\\n$ createdb lnbits\\n$ exit\\n\")), mdx(\"h2\", null, \"pyenv\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt update -y\\n# apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git\\n# git clone https://github.com/pyenv/pyenv.git .pyenv\\n# echo 'export PYENV_ROOT=\\\"$HOME/.pyenv\\\"' >> .bashrc\\n# echo 'export PATH=\\\"$PYENV_ROOT/bin:$PATH\\\"' >> .bashrc\\n# echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\\\n eval \\\"$(pyenv init -)\\\"\\\\nfi' >> .bashrc\\n# exec \\\"$SHELL\\\"\\n# pyenv global 3.7.12\\n# pyenv which python3\\n\")), mdx(\"h2\", null, \"pipenv\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# apt install software-properties-common\\n# apt-add-repository universe\\n# apt update\\n# apt install python3-pip\\n# python3 -m pip install --user pipenv\\n# echo export PATH=\\\"/root/.local/bin:$PATH\\\" >> .bashrc\\n# source .bashrc\\n\\n# exit\\n# deactivate\\n\")), mdx(\"h2\", null, \"lnbits\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# git clone https://github.com/lnbits/lnbits-legend.git\\n# cd lnbits-legend/\\n# git reset --hard b122debd8c3912be3709ff0cc2d42b74896cfe1b\\n# pipenv --python /root/.pyenv/versions/3.7.12/bin/python3 shell\\n# pipenv install\\n# mkdir data\\n# cp .env.example .env\\n# echo LNBITS_DATABASE_URL=\\\"postgres://postgres:myPassword@localhost/lnbits\\\" >> .env\\n# pipenv run python -m uvicorn lnbits.__main__:app --host 0.0.0.0\\n\")), mdx(\"h2\", null, \"Nginx\"), mdx(\"p\", null, \"You are using the uwsgi module of nginx. Uvicorn exposes an asgi API. Therefore you should use a \\\"reverse proxy\\\" configuration instead of an uwsgi configuration.\"), mdx(\"p\", null, \"You can get more info on the uvicorn documentation: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.uvicorn.org/deployment/#running-behind-nginx\"\n  }, \"https://www.uvicorn.org/deployment/#running-behind-nginx\"), \" (see the proxy_pass line)\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#debian-115","title":"Debian 11.5","items":[{"url":"#python","title":"Python"},{"url":"#postgres","title":"Postgres"},{"url":"#lnbits","title":"LNbits","items":[{"url":"#service","title":"Service"}]},{"url":"#nginx","title":"Nginx"}]},{"url":"#ubuntu-2004","title":"Ubuntu 20.04","items":[{"url":"#postgres-1","title":"postgres"},{"url":"#pyenv","title":"pyenv"},{"url":"#pipenv","title":"pipenv"},{"url":"#lnbits-1","title":"lnbits"},{"url":"#nginx-1","title":"Nginx"},{"url":"#update","title":"Update"}]},{"url":"#installation","title":"Installation","items":[{"url":"#postgres-2","title":"postgres"},{"url":"#pyenv-1","title":"pyenv"},{"url":"#pipenv-1","title":"pipenv"},{"url":"#lnbits-2","title":"lnbits"},{"url":"#nginx-2","title":"Nginx"}]}]},"parent":{"relativePath":"guides/lnbits.md"},"frontmatter":{"metaTitle":"GuÃ­as - LNBits","metaDescription":"How-to guides"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/guides","title":"GuÃ­as"}}},{"node":{"fields":{"slug":"/","title":"Tatacoa Wiki"}}},{"node":{"fields":{"slug":"/guides/debian","title":"Debian Server"}}},{"node":{"fields":{"slug":"/guides/dev","title":"Dev"}}},{"node":{"fields":{"slug":"/guides/gatsby","title":"Gatsby"}}},{"node":{"fields":{"slug":"/guides/lnbits","title":"LNBits"}}},{"node":{"fields":{"slug":"/guides/lnd","title":"LND"}}},{"node":{"fields":{"slug":"/guides/mysql","title":"MySQL"}}},{"node":{"fields":{"slug":"/guides/nextjs","title":"NextJS"}}},{"node":{"fields":{"slug":"/guides/node","title":"Node"}}},{"node":{"fields":{"slug":"/guides/ops","title":"OPS"}}},{"node":{"fields":{"slug":"/guides/prestashop","title":"Prestashop"}}},{"node":{"fields":{"slug":"/guides/psql","title":"PSQL"}}},{"node":{"fields":{"slug":"/guides/btcpay","title":"BTCPay Server"}}},{"node":{"fields":{"slug":"/guides/react","title":"React"}}},{"node":{"fields":{"slug":"/guides/wordpress","title":"Wordpress"}}}]}},"pageContext":{"id":"09e60606-9ea9-59f7-8f36-e520130eeb78"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}